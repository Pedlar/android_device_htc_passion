#!/system/bin/sh
#
# mount ext[234] partition from sd card

BB="logwrapper busybox";

if [ ! -d /sd-ext ];
then
    $BB mount -o rw,remount /
    install -m 774 -o 1000 -g 1000 -d /sd-ext
    $BB mount -o ro,remount /
fi

if [ "$SD_EXT_DIRECTORY" = "" ];
then
    SD_EXT_DIRECTORY=/sd-ext;
fi;

# find first linux partition on SD card
for mmcblk in 0 1;do
MMC=/dev/block/mmcblk${mmcblk}

# wait for the device to settle
COUNT=6;
until [ -b "$MMC" ] || [ $COUNT -lt 1 ];
do
    sleep 1;
    COUNT=$((COUNT-1));
done;

    if [ -b "$MMC" ];
    then
        FDISK="busybox fdisk"
        PARTITION=`$FDISK -l $MMC | awk '/^\// && $5 == 83 {print $1;exit;}'`

        if [ -b "$PARTITION" ];
        then
            log -p i -t mountsd "$PARTITION = linux partition"
                break
        fi
    fi
done
if [ "$PARTITION" = "" ];
then
    log -p i -t mountsd "Valid linux partition not found"
    exit
fi
log -p i -t mountsd "Checking filesystems..";

# fsck the sdcard filesystem first
if [ -x `which e2fsck` ];
then
    e2fsck -y $PARTITION;e2fsck_exitcode=$?
else
    echo "executable e2fsck not found, assuming no filesystem errors"
    e2fsck_exitcode=0
fi
# set property with exit code in case an error occurs
setprop cm.e2fsck.errors $e2fsck_exitcode;
if [ "$e2fsck_exitcode" -lt 2 ];
then
    # mount and set perms
    $BB mount -o rw,noatime,nodiratime -t auto $PARTITION $SD_EXT_DIRECTORY;
    if [ "$?" = 0 ];
    then
        $BB chown 1000:1000 $SD_EXT_DIRECTORY;
        $BB chmod 771 $SD_EXT_DIRECTORY;
        log -p i -t mountsd "$SD_EXT_DIRECTORY successfully mounted";
        #enable swap (by drew)
        SWAP_PART=`$FDISK -l $MMC | awk '/^\// && $5 == 82 {print $1;exit;}'`
        if [ "$SWAP_PART" = "" ];
        then
            log -p i -t mountsd "No swap found";
        else
            $BB swapon $SWAP_PART;
            setprop a2sd.swap 1;
            setprop a2sd.swappart $SWAP_PART;
            log -p i -t mountsd "Swap enabled on $SWAP_PART (Hopefully)";
        fi
    else
        log -p e -t mountsd "Unable to mount filesystem for $SD_EXT_DIRECTORY!";
    fi
else
    log -p e -t mountsd "Unable to repair filesystem, disabling apps2sd";
fi
